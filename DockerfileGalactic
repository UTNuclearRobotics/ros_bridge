# Adopted from the following:
#   https://github.com/smith-doug/ros1_bridge
#   https://github.com/TommyChangUMD/ros-humble-ros1-bridge-builder/

FROM ros:galactic-ros-base-focal

# Set bash as the default shell
SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive \
    ROS_LOCALHOST_ONLY=0 \
    ROS_DOMAIN_ID=1

# Setup ROS1 sources.list and keys
RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

ENV ROS1_DISTRO=noetic
ENV ROS2_DISTRO=galactic

# # (ROS 1) First, build ROS 1 messages:
# COPY ros1_ws /ros1_ws
# WORKDIR /ros1_ws
# RUN bash -c "unset ROS_DISTRO && \
#     time colcon build"
# # RUN unset ROS_DISTRO && \
# #     time colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release

# # (ROS 2) Then build the ROS 2 messages:
# COPY ros2_ws /ros2_ws
# WORKDIR /ros2_ws
# RUN source /opt/ros/humble/setup.bash && \
#     colcon build
# # RUN source /opt/ros/humble/setup.bash && \
# #     time colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release

# Install ROS1 debian packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS1_DISTRO}-ros-comm \
    ros-${ROS1_DISTRO}-sensor-msgs \
    ros-${ROS1_DISTRO}-geometry-msgs \
    ros-${ROS1_DISTRO}-std-msgs \
    ros-${ROS1_DISTRO}-tf2-msgs \
    ros-${ROS1_DISTRO}-tf2 \
    ros-${ROS1_DISTRO}-tf2-ros \
    ros-${ROS1_DISTRO}-nav-msgs \
    && rm -rf /var/lib/apt/lists/*

# Install ROS2 debian packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS2_DISTRO}-sensor-msgs \
    ros-${ROS2_DISTRO}-geometry-msgs \
    ros-${ROS2_DISTRO}-std-msgs \
    ros-${ROS2_DISTRO}-tf2-msgs \
    ros-${ROS2_DISTRO}-nav-msgs \
    ros-${ROS2_DISTRO}-rmw-fastrtps-cpp \
    ros-${ROS2_DISTRO}-rmw-cyclonedds-cpp \
    ros-${ROS2_DISTRO}-rmw \
    qtbase5-dev \
    && rm -rf /var/lib/apt/lists/*

# # Add additional ROS1/ROS2 message packages here
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     # ros-${ROS1_DISTRO}-something-msgs \
#     # ros-${ROS2_DISTRO}-something-msgs \
#     && rm -rf /var/lib/apt/lists/*

# (ROS 1) First, build ROS 1 messages:
COPY ros1_ws /ros1_ws
WORKDIR /ros1_ws
RUN /bin/bash -c "source /opt/ros/${ROS1_DISTRO}/setup.bash && \
    catkin_make_isolated --install"

# (ROS 2) Then build the ROS 2 messages:
COPY ros2_ws /ros2_ws
WORKDIR /ros2_ws
RUN /bin/bash -c "source /opt/ros/${ROS2_DISTRO}/setup.bash && \
    colcon build --packages-select tdm_msgs"

# (ROS 1 and ROS 2) Finally, build the bridge:
RUN mkdir -p /bridge_ws/src
WORKDIR /bridge_ws/src
RUN git clone -b ${ROS2_DISTRO} https://github.com/ros2/ros1_bridge.git
WORKDIR /bridge_ws
RUN source /opt/ros/${ROS1_DISTRO}/setup.bash && \
    source /opt/ros/${ROS2_DISTRO}/setup.bash && \
    source /ros1_ws/install_isolated/setup.bash && \
    source /ros2_ws/install/local_setup.bash && \
    colcon build --packages-select ros1_bridge --cmake-force-configure

RUN echo "export ROS_MASTER_URI=http://localhost:11311" >> ~/.bashrc
RUN echo "export ROS_DOMAIN_ID=${ROS_DOMAIN_ID}" >> ~/.bashrc
RUN echo "export ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}" >> ~/.bashrc

# # Build workspace and ros1_bridge from source
# RUN source /opt/ros/${ROS1_DISTRO}/setup.bash && \
#     source /opt/ros/${ROS2_DISTRO}/setup.bash && \
#     source /ros1_ws/devel/setup.bash && \
#     source /ros2_ws/install/setup.bash && \
#     # source /bridge_ws/install/setup.bash && \


# Copy the entrypoint into the image
COPY ./entrypoint.sh /entrypoint.sh

# Run this script on startup
ENTRYPOINT /entrypoint.sh